/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.16).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package hu.reqeng.pizza.api;

import java.util.List;

import hu.reqeng.pizza.model.*;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2020-10-14T20:45:39.674Z")

@Api(value = "carts", description = "the carts API")
@RequestMapping(value = "/v1")
public interface CartsApi {

    @ApiOperation(value = "Update item quantity in the order", nickname = "changeOrderQty", notes = "Updates the specified items in the cart to a non-negative qty", response = ChangeOrderQtySuccessResponse.class, tags={ "cart", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Cart update success", response = ChangeOrderQtySuccessResponse.class),
        @ApiResponse(code = 400, message = "Cart update failed", response = ChangeOrderQtyFailureResponse.class),
        @ApiResponse(code = 500, message = "Internal server error") })
    @RequestMapping(value = "/carts/{cartId}/changeOrderQty",
        produces = { "application/json" }, 
        method = RequestMethod.POST)
    ResponseEntity<Object> changeOrderQty(@ApiParam(value = "The id of the cart",required=true) @PathVariable("cartId") String cartId,@ApiParam(value = "" ,required=true )  @Valid @RequestBody List<ChangeOrderQtyRequest> itemsToChange);


    @ApiOperation(value = "Proceed to payment", nickname = "checkout", notes = "Finalize order and go to checkout", tags={ "cart", })
    @ApiResponses(value = { 
        @ApiResponse(code = 300, message = "Checkout successful", response = CheckoutSuccessResponse.class),
        @ApiResponse(code = 400, message = "Checkout failure", response = CheckoutFailureResponse.class),
        @ApiResponse(code = 500, message = "Internal server error") })
    @RequestMapping(value = "/carts/{cartId}/checkout",
        method = RequestMethod.GET)
    ResponseEntity<Object> checkout(@ApiParam(value = "The id of the cart",required=true) @PathVariable("cartId") String cartId);


    @ApiOperation(value = "Cancels order and reinitialize cart", nickname = "clearCart", notes = "", tags={ "cart", })
    @ApiResponses(value = { 
        @ApiResponse(code = 204, message = "Delete successful"),
        @ApiResponse(code = 500, message = "Internal server error") })
    @RequestMapping(value = "/carts/{cartId}",
        method = RequestMethod.DELETE)
    ResponseEntity<Void> clearCart(@ApiParam(value = "The id of the cart",required=true) @PathVariable("cartId") String cartId);


    @ApiOperation(value = "Creates a new cart for ordering", nickname = "createNewCart", notes = "", response = CreateCartResponse.class, tags={ "cart", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "Id of the new cart", response = CreateCartResponse.class),
        @ApiResponse(code = 500, message = "Internal server error") })
    @RequestMapping(value = "/carts",
        produces = { "application/json" }, 
        method = RequestMethod.PUT)
    ResponseEntity<CreateCartResponse> createNewCart();

}
